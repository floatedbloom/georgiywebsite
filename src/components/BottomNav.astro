---
const links = [
  { href: "/", label: "🏠", title: "Home" },
  { href: "/about", label: "❓", title: "About" },
  { href: "/skills", label: "🛠️", title: "Skills" },
  { href: "/projects", label: "📂", title: "Projects" },
  { href: "/work", label: "🏢", title: "Work" }
]
function segmentGraphemes(text: string) {
  try {
    const seg = new Intl.Segmenter(undefined, { granularity: 'grapheme' });
    return Array.from(seg.segment(text), s => s.segment);
  } catch (e) {
    return Array.from(text);
  }
}
---


<nav class="bottom-nav fixed bottom-4 left-1/2 -translate-x-1/2 bg-white/70 dark:bg-gray-800/70 backdrop-blur-md shadow-lg border border-white/20 dark:border-gray-700 py-1 px-2 rounded-full">
	<ul class="flex m-0 p-0 list-none">
		{links.map((link) => (
			<li>
				<a href={link.href} class="group flex flex-col items-center text-gray-700 dark:text-gray-200 no-underline hover:no-underline transition-transform px-4 hover:scale-105">
					<span class="grid place-items-center w-10 h-10">
						<span class="text-xl leading-none transition-transform duration-200 group-hover:scale-110">
							{segmentGraphemes(link.label).map((char, i) => (
								<span class="char" style={`--delay: ${i * 0.05}s`}>{char}</span>
							))}
						</span>
					</span>
					<span class="text-[12px] mt-1 text-gray-600 font-semibold dark:text-gray-100">{link.title}</span>
				</a>
			</li>
		))}
	</ul>
</nav>

<style>
	.bottom-nav {
		position: fixed !important;
		bottom: 1rem !important;
		left: 50vw !important;
		transform: translateX(-50%) !important;
		background: rgba(255, 255, 255, 0.92) !important;
		backdrop-filter: none !important;
		-webkit-backdrop-filter: none !important;
		border: 1px solid rgba(168, 162, 158, 0.2) !important;
		border-radius: 9999px !important;
		z-index: 9999 !important;
		padding: 0.25rem 0.5rem !important;
		/* Force new stacking context to avoid parent transforms */
		isolation: isolate !important;
	}

	/* Move navigation to top on mobile */
	@media (max-width: 768px) {
		.bottom-nav {
			top: 0 !important;
			bottom: auto !important;
			left: 0 !important;
			right: 0 !important;
			width: 100% !important;
			transform: none !important;
			border-radius: 0 !important;
			background: rgba(255, 255, 255, 1) !important;
			box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
		}

		/* Distribute items evenly to prevent overflow */
		.bottom-nav ul {
			width: 100% !important;
			justify-content: space-between !important;
		}

		.bottom-nav li {
			flex: 1 1 0 !important;
			min-width: 0 !important;
		}

		.bottom-nav a {
			width: 100% !important;
			padding: 0.5rem 0 !important;
		}

		.bottom-nav .text-\[12px\] {
			font-size: 11px !important;
			margin-top: 0.25rem !important;
		}
	}

	.bottom-nav ul {
		margin: 0 !important;
		padding: 0 !important;
		list-style: none !important;
	}

	.bottom-nav li {
		list-style: none !important;
	}

	.bottom-nav a,
	.bottom-nav .text-gray-600,
	.bottom-nav .dark\:text-gray-100,
	.bottom-nav .dark\:text-gray-200,
	.bottom-nav span {
		color: #111827 !important;
	}

	.bottom-nav .shadow-lg {
		box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12) !important;
	}
</style>