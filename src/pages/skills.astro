---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
const pageTitle = "Skills";

title: "Skills"
layout: Layout
description: "This is the skills page."
---

<Layout title="Skills â€¢ George">
    <main>
        <head>
            <meta name="viewport" content="initial-scale=1, width=device-width">
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
            <title>{pageTitle}</title>
            <style>
                #barGraph {
                    width: 100%;
                    max-width: 800px;
                    height: 400px;
                    border-radius: 10px; /* Soft rounded corners */
                    padding: 10px;
                    transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
                    box-shadow: 0px 1px 8px #ff9a9e; /* Soft glow */
                }
                .padded {
                    padding: 1em;
                }
                .bottom-pad {
                    padding-bottom: 2em;
                }
                .button-txt {
                    font-size: 1em;
                    font-weight: bold;
                }
                .custom-button {
                    display: inline-block;
                    text-decoration: none;
                    background-color: inherit;
                    color: #d3c6c6;
                    padding: 10px 15px;
                    border-radius: 10px;
                    transition: background-color 0.3s ease, color 0.3s ease;
                    margin: 10px;
                    text-align: center; /* Center text */
                    width: 150px; /* Fixed width for consistent button size */
                }
                .custom-button:hover {
                    background-color: #fad0c4;
                    color: #ffffffd5;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="padded">
                    <h1><span class="text-gradient central">{pageTitle}</span></h1>
                </div>
                <div>
                    <canvas id="barGraph"></canvas>
                </div>
                <div class="col-auto bottom-pad">
                    <button id="languages" class="btn-outline-secondary custom-button button-txt">Languages</button>
                    <button id="web" class="btn-outline-secondary custom-button button-txt">Web Stack</button>
                    <button id="tech" class="btn-outline-secondary custom-button button-txt">Technologies</button>
                    <button id="talk" class="btn-outline-secondary custom-button button-txt">Linguas</button>
                </div>
            </div>
            <script>
                import Chart, { registerables } from 'chart.js/auto';
                let myChart: Chart | null = null;

				const languagesData = {
					labels: ['Python', 'Java', 'Dart', 'C++','C', 'Javascript'],
					datasets: [{
						label: 'Progamming Languages',
						data: [8, 10, 9, 7, 7, 6],
						backgroundColor: '#fad0c4',
						borderColor: '#ff9a9e',
						borderWidth: 2
					}]
				}

				const webData = {
					labels: ['Flask','Astro', 'Flutter', 'HTML/CSS', 'React'],
					datasets: [{
						label: 'Web Stack',
						data: [7, 9, 10, 8,4],
						backgroundColor: '#fad0c4',
						borderColor: '#ff9a9e',
						borderWidth: 2
					}]
				};

                const techData = {
					labels: ['SQLite','Git','Notion', 'MS Office'],
					datasets: [{
						label: 'Technologies',
						data: [8, 7, 9, 8],
						backgroundColor: '#fad0c4',
						borderColor: '#ff9a9e',
						borderWidth: 2
					}]
				};

                const talkData = {
					labels: ['Russian','English', 'French', 'Portugese'],
					datasets: [{
						label: 'Languages',
						data: [9, 10, 6, 2],
						backgroundColor: '#fad0c4',
						borderColor: '#ff9a9e',
						borderWidth: 2
					}]
				};

                function createChart(data: any) {
                    const c = document.getElementById('barGraph') as HTMLCanvasElement;
					const ctx = c.getContext('2d') as CanvasRenderingContext2D;
                    if (myChart) {
                        myChart.destroy();
                    }
                    myChart = new Chart(ctx, {
                        type: 'bar',
                        data: data,
                        options: {
                            scales: {
                                x: {
                                    ticks: {
                                        color: "#dff8ffd5",
                                        font: {
                                            size: 14,
                                            weight: 'bold'
                                        }
                                    }
                                },
                                y: {
                                    beginAtZero: true,
                                    display: false,
                                }
                            },
                            plugins: {
                                legend: {
                                    display: false,
                                },
                                tooltip: {
                                    enabled: false,
                                }
                            }
                        }
                    });
                }

                document.addEventListener('DOMContentLoaded', () => {
					createChart(languagesData);

                    const languagesButton = document.getElementById('languages') as HTMLCanvasElement;
                    const webButton = document.getElementById('web') as HTMLCanvasElement;
                    const techButton = document.getElementById('tech') as HTMLCanvasElement;
                    const talkButton = document.getElementById('talk') as HTMLCanvasElement;

                    languagesButton.addEventListener('click', () => {
                        createChart(languagesData);
                    });

                    webButton.addEventListener('click', () => {
                        createChart(webData);
                    });

                    techButton.addEventListener('click', () => {
                        createChart(techData);
                    });

                    talkButton.addEventListener('click', () => {
                        createChart(talkData);
                    });
                });
            </script>
        </body>
    </main>
</Layout>
